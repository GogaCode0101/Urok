import tkinter as tk
from tkinter import messagebox
from tkinter import ttk

# Основное окно авторизации
class LoginWindow(tk.Tk):
    def __init__(self):
        super().__init__()
        self.title("Авторизация")
        self.geometry("400x300")

        # Логотип
        tk.Label(self, text="Школа+", font=("Arial", 24, "bold")).pack(pady=20)

        # Поля ввода
        tk.Label(self, text="Логин").pack()
        self.login_entry = tk.Entry(self, width=30)
        self.login_entry.pack(pady=5)

        tk.Label(self, text="Пароль").pack()
        self.password_entry = tk.Entry(self, width=30, show="*")
        self.password_entry.pack(pady=5)

        # Кнопки
        tk.Button(self, text="Войти", command=self.login).pack(pady=10)
        tk.Button(self, text="Зарегистрироваться", command=self.register).pack()

    def login(self):
        login = self.login_entry.get()
        password = self.password_entry.get()
        if login == "admin" and password == "password":  # Пример проверки
            self.destroy()
            MainMenu()
        else:
            messagebox.showerror("Ошибка", "Неверный логин или пароль")

    def register(self):
        messagebox.showinfo("Регистрация", "Функция регистрации в разработке")


# Главное меню
class MainMenu(tk.Tk):
    def __init__(self):
        super().__init__()
        self.title("Главное меню")
        self.geometry("600x400")

        # Боковая панель
        side_menu = tk.Frame(self, width=200, bg="lightgray")
        side_menu.pack(side="left", fill="y")

        buttons = [
            ("Расписание", self.open_schedule),
            ("Оценки", self.open_grades),
            ("Посещаемость", self.open_attendance),
            ("Сообщения", self.open_messages),
            ("Выход", self.quit),
        ]
        for text, command in buttons:
            tk.Button(side_menu, text=text, width=20, command=command).pack(pady=10)

        # Центральная область
        tk.Label(self, text="Добро пожаловать в систему", font=("Arial", 16)).pack(pady=50)

        self.mainloop()

    def open_schedule(self):
        ScheduleWindow()

    def open_grades(self):
        GradesWindow()

    def open_attendance(self):
        messagebox.showinfo("Посещаемость", "Функция в разработке")

    def open_messages(self):
        MessagesWindow()


# Окно расписания
class ScheduleWindow(tk.Toplevel):
    def __init__(self):
        super().__init__()
        self.title("Расписание")
        self.geometry("600x400")

        # Таблица расписания
        columns = ("Дата", "Время", "Предмет", "Кабинет", "Учитель")
        table = ttk.Treeview(self, columns=columns, show="headings")
        for col in columns:
            table.heading(col, text=col)
            table.column(col, width=100)
        table.pack(fill="both", expand=True)

        # Заполнение примерами
        table.insert("", "end", values=("01.12.2024", "08:30", "Математика", "101", "Иванов"))
        table.insert("", "end", values=("01.12.2024", "10:00", "Физика", "202", "Петров"))

        # Кнопки управления
        tk.Button(self, text="Добавить", command=self.add_entry).pack(side="left", padx=10, pady=10)
        tk.Button(self, text="Закрыть", command=self.destroy).pack(side="right", padx=10, pady=10)

    def add_entry(self):
        messagebox.showinfo("Добавление", "Функция добавления записи в разработке")


# Окно оценок
class GradesWindow(tk.Toplevel):
    def __init__(self):
        super().__init__()
        self.title("Оценки")
        self.geometry("600x400")

        # Таблица оценок
        columns = ("Ученик", "Предмет", "Оценка", "Дата")
        table = ttk.Treeview(self, columns=columns, show="headings")
        for col in columns:
            table.heading(col, text=col)
            table.column(col, width=120)
        table.pack(fill="both", expand=True)

        # Пример данных
        table.insert("", "end", values=("Иванов", "Математика", "5", "01.12.2024"))
        table.insert("", "end", values=("Петров", "Физика", "4", "01.12.2024"))

        # Кнопки управления
        tk.Button(self, text="Добавить", command=self.add_grade).pack(side="left", padx=10, pady=10)
        tk.Button(self, text="Закрыть", command=self.destroy).pack(side="right", padx=10, pady=10)

    def add_grade(self):
        messagebox.showinfo("Добавление", "Функция добавления оценки в разработке")


# Окно сообщений
class MessagesWindow(tk.Toplevel):
    def __init__(self):
        super().__init__()
        self.title("Сообщения")
        self.geometry("600x400")

        # Список сообщений
        messages = tk.Listbox(self)
        messages.pack(fill="both", expand=True)
        messages.insert("end", "Сообщение от учителя Иванова")
        messages.insert("end", "Уведомление о собрании 01.12.2024")

        # Поле ввода и кнопка отправки
        entry_frame = tk.Frame(self)
        entry_frame.pack(fill="x", pady=10)
        entry = tk.Entry(entry_frame)
        entry.pack(side="left", fill="x", expand=True)
        tk.Button(entry_frame, text="Отправить").pack(side="right")


# Запуск программы
if __name__ == "__main__":
    LoginWindow().mainloop()
